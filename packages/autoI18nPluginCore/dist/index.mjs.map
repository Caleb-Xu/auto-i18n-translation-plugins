{"version":3,"file":"index.mjs","sources":["../../../node_modules/.pnpm/@rollup+plugin-typescript@11.1.6_rollup@4.20.0_tslib@2.6.3_typescript@5.5.4/node_modules/tslib/tslib.es6.js","../src/enums/language.ts","../src/enums/translate.ts","../src/enums/option.ts","../src/translator/translator.ts","../src/translator/google.ts","../src/translator/youdao.ts","../src/utils/option.ts","../src/constants/translate.ts","../src/utils/base.ts","../src/utils/json.ts","../src/utils/file.ts","../src/utils/translate.ts","../src/utils/chunk.ts","../src/translator/baidu.ts","../src/option.ts","../src/filter/visitor/StringLiteral.ts","../src/filter/visitor/CallExpression.ts","../src/filter/visitor/TemplateElement.ts","../src/filter/visitor/JSXText.ts","../src/filter/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","/*\n * @Author: xiaoshanwen\n * @Date: 2024-03-11 18:59:10\n * @LastEditTime: 2025-03-16 18:15:25\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/enums/language.ts\n */\n// 待补充...\nexport enum LanguageEnum {}\n\nexport enum OriginLangKeyEnum {\n    ZH = 'zh-cn',\n    EN = 'en',\n    JA = 'ja',\n    KO = 'ko',\n    RU = 'ru'\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2024-04-03 18:12:45\n * @LastEditTime: 2024-04-03 18:33:53\n * @FilePath: /i18n_translation_vite/autoI18nPluginCore/src/enums/translate.ts\n */\nexport enum TranslateApiEnum {\n    google = 'Google',\n    youdao = 'Youdao'\n}\n","/*\n * @Date: 2025-03-16 14:12:30\n * @LastEditors: xiaoshan\n * @LastEditTime: 2025-03-16 14:13:42\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/enums/option.ts\n */\n/**\n * 翻译类型枚举\n */\nexport enum TranslateTypeEnum {\n    FULL_AUTO = 'full-auto',\n    SEMI_AUTO = 'semi-auto'\n}\n","export interface TranslatorOption {\n    /** 实际的请求方法 */\n    fetchMethod: (text: string, fromKey: string, toKey: string) => Promise<string>\n    name?: string\n    /** 执行间隔（默认不开启） */\n    interval?: number\n}\n\n// 定义翻译类型和提示信息的映射\nconst translationTypeMap = new Map<string | undefined, string>([\n    ['有道翻译', '请前往有道翻译官方申请翻译key，默认会有50的额度，并请检查额度是否充足。'],\n    ['百度翻译', '请前往百度翻译官方申请翻译key，每个月都有免费额度，并请检查额度是否充足。']\n])\n\nclass IntervalQueue<T extends any[], U extends any> {\n    private delay: number\n    private timeout: number | undefined\n    private fn: (...args: T) => U\n\n    /**\n     * 间隔执行队列\n     * @param fn 执行函数\n     * @param delay 执行间隔\n     * @param timeout 超时时间\n     */\n    constructor(fn: (...args: T) => U, delay: number, timeout?: number) {\n        this.fn = fn\n        this.delay = delay\n        this.timeout = timeout\n    }\n\n    private queue: {\n        args: T\n        resolve: (value: Awaited<U>) => void\n        reject: (reason?: any) => void\n    }[] = []\n    execute(...args: T) {\n        return new Promise<Awaited<U>>((resolve, reject) => {\n            this.queue.push({ args, resolve, reject })\n            this.run()\n            if (this.timeout) {\n                setTimeout(() => {\n                    reject(new Error('IntervalQueue timeout'))\n                }, this.timeout)\n            }\n        })\n    }\n\n    private async wait(delay = this.delay) {\n        await new Promise(resolve => setTimeout(resolve, delay))\n    }\n\n    private isRunning = false\n    private async run() {\n        if (this.isRunning) return\n        let item: (typeof this.queue)[number] | undefined\n        while ((item = this.queue.shift())) {\n            const { args, resolve, reject } = item\n            this.isRunning = true\n            try {\n                resolve(await this.fn(...args))\n            } catch (e) {\n                reject(e)\n            }\n            await this.wait()\n        }\n        this.isRunning = false\n    }\n}\n\nconst interval = <T extends unknown[], U extends unknown>(fn: (...args: T) => U, delay: number) => {\n    const queue = new IntervalQueue(fn.bind(null), delay)\n    return (...args: T) => {\n        return queue.execute(...args)\n    }\n}\n\nexport class Translator {\n    protected option: TranslatorOption\n\n    constructor(option: TranslatorOption) {\n        this.option = option\n        if (this.option.interval) {\n            this.option.fetchMethod = interval(this.option.fetchMethod, this.option.interval)\n        }\n    }\n\n    protected getErrorMessage(error: unknown) {\n        if (error instanceof Error) {\n            return error.message\n        } else {\n            return String(error)\n        }\n    }\n\n    async translate(text: string, fromKey: string, toKey: string) {\n        let result = ''\n        try {\n            result = await this.option.fetchMethod(text, fromKey, toKey)\n        } catch (error) {\n            const name = this.option.name\n            console.error(\n                `翻译api${name ? `【${name}】` : ''}请求异常：${this.getErrorMessage(error)}` +\n                    '\\n' +\n                    translationTypeMap &&\n                    translationTypeMap.has(name) &&\n                    translationTypeMap.get(name)\n            )\n        }\n        return result\n    }\n}\n","/*\n * @Date: 2025-03-11 17:53:11\n * @LastEditors: xiaoshan\n * @LastEditTime: 2025-03-14 14:21:06\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/translator/google.ts\n */\nimport { translate } from '@vitalets/google-translate-api'\nimport { Translator } from './translator'\nimport tunnel from 'tunnel'\n\nexport interface GoogleTranslatorOption {\n    proxyOption?: tunnel.ProxyOptions\n}\n\nexport class GoogleTranslator extends Translator {\n    constructor(option: GoogleTranslatorOption) {\n        super({\n            name: 'Google翻译',\n            fetchMethod: async (text, fromKey, toKey) => {\n                let data = await translate(text, {\n                    from: fromKey,\n                    to: toKey,\n                    ...(option.proxyOption\n                        ? {\n                              fetchOptions: {\n                                  agent: tunnel.httpsOverHttp({\n                                      proxy: option.proxyOption\n                                  })\n                              }\n                          }\n                        : {})\n                })\n                return data['text'] || ''\n            }\n        })\n    }\n}\n","import axios, { AxiosProxyConfig } from 'axios'\nimport { Translator } from './translator'\nimport CryptoJS from 'crypto-js'\n\nexport interface YoudaoTranslatorOption {\n    appId: string\n    appKey: string\n    proxy?: AxiosProxyConfig\n    /** 翻译api执行间隔，默认为1000 */\n    interval?: number\n}\n\nexport class YoudaoTranslator extends Translator {\n    /** 有道的语言类型映射不标准，需要手动控制 */\n    private readonly YOUDAO_TRANSLATE_KEY_CONVERT_MAP: Record<string, string> = {\n        'zh-cn': 'zh-CHS',\n        'zh-tw': 'zh-CHT'\n    }\n\n    private truncate(q: string) {\n        // 检查输入字符串的长度\n        if (q.length <= 20) {\n            // 如果长度小于等于20，直接返回原字符串\n            return q\n        } else {\n            // 如果长度大于20，截取前10个字符和后10个字符，并在中间插入长度信息\n            const len = q.length\n            return q.substring(0, 10) + len + q.substring(len - 10)\n        }\n    }\n\n    private getTranslateKey(key: string) {\n        return this.YOUDAO_TRANSLATE_KEY_CONVERT_MAP[key] || key\n    }\n\n    constructor(option: YoudaoTranslatorOption) {\n        super({\n            name: '有道翻译',\n            fetchMethod: async (text, fromKey, toKey) => {\n                let salt = new Date().getTime()\n                let curTime = Math.round(new Date().getTime() / 1000)\n                let str = option.appId + this.truncate(text) + salt + curTime + option.appKey\n                let sign = CryptoJS.SHA256(str).toString(CryptoJS.enc.Hex)\n\n                const data = {\n                    q: text,\n                    appKey: option.appId,\n                    salt,\n                    from: this.getTranslateKey(fromKey),\n                    to: this.getTranslateKey(toKey),\n                    sign,\n                    signType: 'v3',\n                    curtime: curTime\n                }\n                const response = await axios.post('https://openapi.youdao.com/api', data, {\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                    },\n                    proxy: option.proxy\n                })\n                // 请求成功，返回响应数据\n                return response.data.translation?.[0] || ''\n            },\n            interval: option.interval ?? 1000\n        })\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2024-02-29 14:44:18\n * @LastEditTime: 2024-03-01 11:42:34\n * @FilePath: /i18n_translation_vite/autoI18nPluginCore/src/utils/option.ts\n */\nimport { FunctionFactoryOptions } from '../types'\n\nexport class FunctionFactoryOption {\n    static originLang: string = ''\n}\n\nexport const functionFactory = (\n    fn: (path: string, options: FunctionFactoryOptions) => void,\n    options: FunctionFactoryOptions\n) => {\n    return (path: any) => {\n        fn(path, options)\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2024-04-06 15:47:14\n * @LastEditTime: 2025-03-16 18:18:28\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/constants/translate.ts\n */\nimport { OriginLangKeyEnum } from 'src/enums/language'\n\nexport const REGEX_MAP = {\n    [OriginLangKeyEnum.ZH]: /[\\u4e00-\\u9fff]/,\n    [OriginLangKeyEnum.EN]: /[a-zA-Z]/,\n    [OriginLangKeyEnum.JA]: /[\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FFF]/, // 日语假名和汉字\n    [OriginLangKeyEnum.KO]: /[\\uAC00-\\uD7A3]/, // 韩语字母\n    [OriginLangKeyEnum.RU]: /[йцукенгшщзхъфывапролджэячсмитьбюё .-]{1,}/ // 俄语字母\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-11 10:01:43\n * @LastEditTime: 2025-03-16 18:21:40\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/utils/base.ts\n */\nimport { Node } from '@babel/types'\nimport types from '@babel/types'\nimport { option } from '../option'\nimport { FunctionFactoryOption } from './option'\nimport { REGEX_MAP } from 'src/constants'\nimport { OriginLangKeyEnum } from 'src/enums'\n\n/**\n * @description: 是否包含来源语言字符\n * @param {string} code\n * @return {*}\n */\nexport function hasOriginSymbols(code: string) {\n    const originLang = FunctionFactoryOption.originLang as OriginLangKeyEnum\n    return REGEX_MAP[originLang].test(code)\n}\n\n/**\n * @description: 过滤注释\n * @param {string} code\n * @return {*}\n */\nexport const removeComments = function (code: string) {\n    // 使用正则表达式匹配并删除单行注释\n    code = code.replace(/\\/\\/.*?\\n/g, '')\n    // 使用正则表达式匹配并删除多行注释\n    code = code.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    // 使用正则表达式匹配并删除HTML注释\n    code = code.replace(/<!--[\\s\\S]*?-->/g, '')\n    return code\n}\n\n/**\n * @description: 用于判断提供的值是否符合正则表达式数组中的任一规则，符合则跳过\n * @param {*} value\n * @param {*} regexArray\n * @return {*}\n */\nexport function checkAgainstRegexArray(value: string, regexArray: string[] | RegExp[]) {\n    for (let i = 0; i < regexArray.length; i++) {\n        const regex = typeof regexArray[i] === 'string' ? new RegExp(regexArray[i]) : regexArray[i]\n        if ((regex as RegExp).test(value)) {\n            return true // 如果符合任何一个规则，返回 true\n        }\n    }\n    return false // 如果所有规则都不符合，返回 false\n}\n\n/**\n * @description: 用于解析抽象语法树中的调用表达式，并提取出调用的名称，如a.b.c() 取 c。\n * @param {any} node\n * @return {*}\n */\nexport function extractFunctionName(node: Node): string {\n    let callName = ''\n    function callObjName(callObj: any, name: string): string {\n        name += '.' + (callObj.property as any).name\n        if (types.isMemberExpression(callObj.object)) {\n            // isMemberExpression： 是否是成员表达式\n            return callObjName(callObj.object, name)\n        }\n        name = (callObj.object as any).name + name\n        return name\n    }\n    if (types.isCallExpression(node)) {\n        // isCallExpression： 是否是调用表达式\n        if (types.isMemberExpression((node as any).callee)) {\n            callName = callObjName((node as any).callee, '')\n        } else {\n            callName = ((node as any).callee as any).name || ''\n        }\n    }\n    return callName\n}\n\n/**\n * @description: 提取文件的中文部分\n * @param {string} fileContent\n * @return {*}\n */\nexport const extractCnStrings = (fileContent: string) => {\n    const regex = /[^\\x00-\\xff]+/g\n    return extractStrings(fileContent, regex)\n}\n\n/**\n * @description: 提取文件指定部分内容\n * @param {string} fileContent\n * @param {any} regex\n * @return {*}\n */\nexport function extractStrings(fileContent: string, regex: any) {\n    const matches = fileContent.match(regex)\n    return matches ? matches.filter((item, index) => matches.indexOf(item) === index) : []\n}\n\n/**\n * @description: 生成i8n翻译函数\n * @param {string} value\n * @param {boolean} isExpression\n * @param {string} key\n * @return {*}\n */\nexport function createI18nTranslator(value: string, isExpression?: boolean, key?: string): any {\n    const nameSpace = option.namespace\n    const trimmedValue = value.trim()\n    const valStr = trimmedValue.replace(/'/g, '\"').replace(/(\\n)/g, '\\\\n')\n    const generatedKey = key || generateId(valStr)\n    if (isExpression) {\n        const valueExp = types.stringLiteral(trimmedValue)\n        valueExp.extra = {\n            raw: `'${valStr}'`, // 防止转码为unicode\n            rawValue: trimmedValue\n        }\n        return types.callExpression(types.identifier(option.translateKey), [\n            types.stringLiteral(generatedKey),\n            valueExp,\n            types.stringLiteral(nameSpace)\n        ])\n    } else {\n        return `${option.translateKey}('${generatedKey}','${valStr}','${nameSpace}')`\n    }\n}\n\n/**\n * @description: 生成唯一id\n * @param {string} key\n * @return {*}\n */\nexport function generateId(key: string) {\n    let hash = 0\n    for (let i = 0; i < key.length; i++) {\n        const charCode = key.charCodeAt(i)\n        hash = (hash << 5) - hash + charCode\n        hash = hash & hash\n    }\n    const id = Math.abs(hash).toString(36) + key.length.toString(36)\n    return id\n}\n\n/**\n * @description: unicode转普通字符串\n * @param {string} str\n * @return {*}\n */\nexport const unicodeToString = (str: string) => {\n    return str.replace(/\\\\u[\\dA-Fa-f]{4}/g, (match: any) => {\n        return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16))\n    })\n}\n\n/**\n * @description: 有道翻译 标识截取\n * @param {string} q\n * @return {*}\n */\nexport function truncate(q: string) {\n    // 检查输入字符串的长度\n    if (q.length <= 20) {\n        // 如果长度小于等于20，直接返回原字符串\n        return q\n    } else {\n        // 如果长度大于20，截取前10个字符和后10个字符，并在中间插入长度信息\n        const len = q.length\n        return q.substring(0, 10) + len + q.substring(len - 10)\n    }\n}\n\n// 导出一个深拷贝函数，用于克隆对象\nexport function cloneDeep<T>(value: T, cache: WeakMap<object, any> = new WeakMap()): T {\n    // 处理基本类型和 null\n    if (typeof value !== 'object' || value === null) {\n        return value\n    }\n\n    // 处理循环引用\n    if (cache.has(value)) {\n        return cache.get(value)\n    }\n\n    // 处理特殊对象类型\n    if (value instanceof Date) {\n        return new Date(value) as T\n    }\n\n    if (value instanceof RegExp) {\n        return new RegExp(value.source, value.flags) as T\n    }\n\n    // 初始化克隆容器\n    const clone: any = Array.isArray(value) ? [] : {}\n\n    // 缓存对象防止循环引用\n    cache.set(value, clone)\n\n    // 处理 Symbol 和普通键的枚举\n    const keys = [\n        ...Object.keys(value),\n        ...Object.getOwnPropertySymbols(value).filter(sym => value.propertyIsEnumerable(sym))\n    ]\n\n    // 递归克隆属性\n    for (const key of keys) {\n        clone[key] = cloneDeep((value as any)[key], cache)\n    }\n\n    return clone as T\n}\n","/**\n * JSON 格式化配置类型\n */\ntype IndentType = 'tab' | 'space'\n\ninterface IndentConfig {\n    tab: { char: string; size: number }\n    space: { char: string; size: number }\n}\n\ninterface JSONFormatConfig {\n    type: IndentType\n    size?: number\n}\n\n// 默认的缩进配置\nconst indentConfig: IndentConfig = {\n    tab: { char: '\\t', size: 1 },\n    space: { char: ' ', size: 4 }\n}\n\n// 默认格式化配置\nconst configDefault: JSONFormatConfig = {\n    type: 'tab'\n}\n\n// 临时存储替换字符串的数组\nlet placeholderStorage: string[] = []\n\n// 临时存储处理函数\nconst pushPlaceholder = (match: string): string => `\\\\${placeholderStorage.push(match)}\\\\`\nconst popPlaceholder = (_match: string, index: string): string => placeholderStorage[+index - 1]\n\n// 生成缩进字符\nconst generateIndentation = (count: number, indentType: string): string => {\n    return new Array(count + 1).join(indentType)\n}\n\n/**\n * 格式化 JSON 字符串\n * @param json JSON 字符串\n * @param indentType 缩进类型\n * @returns 格式化的 JSON 字符串\n */\nfunction formatJSON(json: string, indentType: string): string {\n    placeholderStorage = []\n    let output = ''\n    let indentLevel = 0\n\n    // 提取反斜杠和字符串\n    json = json\n        .replace(/\\\\./g, pushPlaceholder) // 处理反斜杠\n        .replace(/(\".*?\"|'.*?')/g, pushPlaceholder) // 处理字符串\n        .replace(/\\s+/g, '') // 去除多余空格\n\n    // 根据 JSON 内容添加换行和缩进\n    for (let i = 0; i < json.length; i++) {\n        const char = json.charAt(i)\n\n        switch (char) {\n            case '{':\n            case '[':\n                output += char + '\\n' + generateIndentation(++indentLevel, indentType)\n                break\n            case '}':\n            case ']':\n                output += '\\n' + generateIndentation(--indentLevel, indentType) + char\n                break\n            case ',':\n                output += ',\\n' + generateIndentation(indentLevel, indentType)\n                break\n            case ':':\n                output += ': '\n                break\n            default:\n                output += char\n                break\n        }\n    }\n\n    // 去除数字数组的空格，并还原反斜杠和字符串\n    output = output\n        .replace(/\\[[\\d,\\s]+?\\]/g, match => match.replace(/\\s/g, ''))\n        .replace(/\\\\(\\d+)\\\\/g, popPlaceholder) // 还原填充数据\n        .replace(/\\\\(\\d+)\\\\/g, popPlaceholder) // 再次还原填充数据\n\n    return output\n}\n\n/**\n * 格式化 JSON 的主函数\n * @param json 需要格式化的 JSON 对象或字符串\n * @param config 配置选项\n * @returns 格式化后的 JSON 字符串\n */\nexport function jsonFormatter(\n    json: object | string,\n    config: JSONFormatConfig = configDefault\n): string {\n    // 确保输入是 JSON 字符串\n    const jsonString = typeof json === 'string' ? json : JSON.stringify(json)\n\n    // 获取缩进配置\n    const indent = indentConfig[config.type]\n    if (!indent) {\n        throw new Error(`Unrecognized indent type: \"${config.type}\"`)\n    }\n\n    // 生成缩进字符\n    const indentType = generateIndentation(config.size || indent.size, indent.char)\n\n    // 格式化 JSON 字符串\n    return formatJSON(jsonString, indentType)\n}\n","/*\n * @Date: 2025-02-14 10:48:41\n * @LastEditors: xiaoshan\n * @LastEditTime: 2025-03-26 11:18:40\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/utils/file.ts\n */\nimport { jsonFormatter } from './json'\nimport { generateId } from './base'\nimport { option } from '../option'\nimport path from 'path'\nimport fs from 'fs'\n\n/**\n * @description: 新建国际化配置文件夹\n * @return {*}\n */\nexport function initLangFile() {\n    if (!fs.existsSync(option.globalPath)) {\n        fs.mkdirSync(option.globalPath) // 创建lang文件夹\n    }\n    initLangTranslateJSONFile()\n    initTranslateBasicFnFile()\n}\n/**\n * @description: 初始化翻译基础函数文件\n * @returns {void}\n */\nexport function initTranslateBasicFnFile() {\n    // 从配置选项中获取必要的配置信息\n    const { translateKey, namespace, originLang, targetLangList } = option\n    // 生成语言映射列表\n    const langMapList = [...targetLangList, originLang]\n        // 去除语言代码中的连字符\n        .map(item => {\n            return [item.replace('-', ''), item]\n        })\n        // 构建语言映射项\n        .map(item => {\n            return `'${item[0]}': (globalThis && globalThis.${namespace} && globalThis.${namespace}.${item[0]}) ? globalThis?.${namespace}?.${item[0]} : globalThis._getJSONKey('${item[1]}', langJSON)`\n        })\n        // 用逗号和换行符连接所有映射项\n        .join(',\\n')\n    // 构建翻译基础函数的文本内容\n    const translateBasicFnText = `\n    // 导入国际化JSON文件\n    import langJSON from './index.json'\n    (function () {\n    // 定义翻译函数\n    let ${translateKey} = function (key, val, nameSpace) {\n      // 获取指定命名空间下的语言包\n      const langPackage = ${translateKey}[nameSpace];\n      // 返回翻译结果，如果不存在则返回默认值\n      return (langPackage || {})[key] || val;\n    };\n    // 定义简单翻译函数，直接返回传入的值\n    let $${translateKey} = function (val) {\n      return val;\n    };\n    // 定义设置语言包的方法\n    ${translateKey}.locale = function (locale, nameSpace) {\n      // 将指定命名空间下的语言包设置为传入的locale\n      ${translateKey}[nameSpace] = locale || {};\n    };\n    // 将翻译函数挂载到globalThis对象上，如果已经存在则使用已有的\n    globalThis.${translateKey} = globalThis.${translateKey} || ${translateKey};\n    // 将简单翻译函数挂载到globalThis对象上\n    globalThis.$${translateKey} = $${translateKey};\n    // 定义从JSON文件中获取指定键的语言对象的方法\n    globalThis._getJSONKey = function (key, insertJSONObj = undefined) {\n        // 获取JSON对象\n        const JSONObj = insertJSONObj;\n        // 初始化语言对象\n        const langObj = {};\n        // 遍历JSON对象的所有键\n        Object.keys(JSONObj).forEach((value) => {\n            // 将每个语言的对应键值添加到语言对象中\n            langObj[value] = JSONObj[value][key];\n        });\n        // 返回语言对象\n        return langObj;\n    };\n    })();\n    // 定义语言映射对象\n    const langMap = {\n        ${langMapList}\n    };\n    // 存储语言是否存在\n    // 判断 globalThis.localStorage.getItem 是否为函数\n    const isFunction = (fn) => {\n        return typeof fn === 'function';\n    };\n    const withStorageLang = isFunction && globalThis && globalThis.localStorage && \n    isFunction(globalThis.localStorage.getItem) && globalThis.localStorage.getItem('${namespace}');\n    // 从本地存储中获取当前语言，如果不存在则使用源语言\n    const lang = withStorageLang ? globalThis.localStorage.getItem('${namespace}') : '${originLang.replace('-', '')}';\n    // 根据当前语言设置翻译函数的语言包\n    globalThis.${translateKey}.locale(langMap[lang], '${namespace}');\n  `\n    // 构建翻译基础函数文件的路径\n    const indexPath = path.join(option.globalPath, 'index.js')\n\n    // 新增哈希比对逻辑\n    // 标记是否需要更新文件\n    let needUpdate = true\n    // 检查文件是否已存在\n    if (fs.existsSync(indexPath)) {\n        // 生成新内容的哈希值\n        const currentHash = generateId(translateBasicFnText)\n        // 读取现有文件内容\n        const existingContent = fs.readFileSync(indexPath, 'utf-8')\n        // 生成现有内容的哈希值\n        const existingHash = generateId(existingContent)\n        // 判断是否需要更新文件\n        needUpdate = currentHash !== existingHash\n    }\n\n    // 如果需要更新文件，则写入新内容\n    if (needUpdate) {\n        fs.writeFileSync(indexPath, translateBasicFnText)\n    }\n}\n/**\n * @description: 生成国际化JSON文件\n * @return {*}\n */\nexport function initLangTranslateJSONFile() {\n    const indexPath = path.join(option.globalPath, 'index.json')\n    if (!fs.existsSync(indexPath)) {\n        // 不存在就创建\n        fs.writeFileSync(indexPath, JSON.stringify({})) // 创建\n    }\n}\n\n/**\n * @description: 读取国际化JSON文件\n * @return {*}\n */\nexport function getLangTranslateJSONFile() {\n    const filePath = path.join(option.globalPath, 'index.json')\n    try {\n        const content = fs.readFileSync(filePath, 'utf-8')\n        return content\n    } catch (error: any) {\n        if (error.code === 'ENOENT') {\n            console.log('❌读取JSON配置文件异常，文件不存在')\n        } else {\n            console.log('❌读取JSON配置文件异常，无法读取文件')\n        }\n        return JSON.stringify({})\n    }\n}\n\n/**\n * @description: 基于langKey获取JSON配置文件中对应语言对象\n * @param {string} key\n * @return {*}\n */\nexport function getLangObjByJSONFileWithLangKey(\n    key: string,\n    insertJSONObj: object | undefined = undefined\n) {\n    const JSONObj = insertJSONObj || JSON.parse(getLangTranslateJSONFile())\n    const langObj: any = {}\n    Object.keys(JSONObj).forEach(value => {\n        langObj[value] = JSONObj[value][key]\n    })\n    return langObj\n}\n\n/**\n * @description: 设置国际化JSON文件\n * @return {*}\n */\nexport function setLangTranslateJSONFile(obj: object) {\n    const filePath = path.join(option.globalPath, 'index.json')\n    const jsonObj = jsonFormatter(obj)\n    if (fs.existsSync(filePath)) {\n        fs.writeFileSync(filePath, jsonObj)\n    } else {\n        console.log('❌JSON配置文件写入异常，文件不存在')\n    }\n}\n\n/**\n * @description: 构建时把lang配置文件设置到打包后到主文件中\n * @return {*}\n */\nexport function buildSetLangConfigToIndexFile() {\n    if (!option.buildToDist) return\n    let langObjMap: any = {}\n    option.langKey.forEach(item => {\n        langObjMap[item] = getLangObjByJSONFileWithLangKey(item)\n    })\n    if (fs.existsSync(option.distPath)) {\n        fs.readdir(option.distPath, (err, files) => {\n            if (err) {\n                console.error('❌构建文件夹为空，翻译配置无法写入')\n                return\n            }\n\n            files.forEach(file => {\n                if (file.startsWith(option.distKey) && file.endsWith('.js')) {\n                    const filePath = path.join(option.distPath, file)\n                    fs.readFile(filePath, 'utf-8', (err, data) => {\n                        if (err) {\n                            console.log(filePath)\n                            console.error('❌构建主文件不存在，翻译配置无法写入')\n                            return\n                        }\n                        let buildLangConfigString = ''\n                        Object.keys(langObjMap).forEach(item => {\n                            buildLangConfigString =\n                                buildLangConfigString +\n                                `globalThis['${option.namespace}']['${item}']=${JSON.stringify(langObjMap[item])};`\n                        })\n                        try {\n                            // 翻译配置写入主文件\n                            fs.writeFileSync(\n                                filePath,\n                                `globalThis['${option.namespace}']={};${buildLangConfigString}` +\n                                    data\n                            )\n                            console.info('恭喜：翻译配置写入构建主文件成功🌟🌟🌟')\n                        } catch (err) {\n                            console.error('翻译配置写入构建主文件失败:', err)\n                        }\n                    })\n                }\n            })\n        })\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-30 18:23:03\n * @LastEditTime: 2025-03-16 19:12:54\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/utils/translate.ts\n */\n\nimport { chunkUtils } from '.'\nimport * as fileUtils from './file'\nimport { option } from 'src/option'\n\nexport const SEPARATOR = '\\n┇┇┇\\n'\nexport const SPLIT_SEPARATOR_REGEX = /\\n┇ *┇ *┇\\n/\n\ntype langObj = { [key: string]: string }\n\nexport let langObj: langObj = {}\n\n/**\n * @description: 设置翻译对象属性\n * @param {string} key\n * @param {string} value\n * @return {*}\n */\nexport function setLangObj(key: string, value: string) {\n    if (!langObj[key]) {\n        langObj[key] = value\n    }\n}\n\n/**\n * @description: 读取翻译对象\n * @return {*}\n */\nexport function getLangObj() {\n    return langObj\n}\n\n/**\n * @description: 初始化翻译对象\n * @param {langObj} obj\n * @return {*}\n */\nexport function initLangObj(obj: langObj) {\n    if (!Object.keys(langObj)) {\n        langObj = obj\n    }\n}\n\n// todo 类型修复\n/**\n * 自动生成多语言配置文件的核心方法\n *\n * 主要流程：\n * 1. 加载现有翻译文件\n * 2. 对比找出新增需要翻译的内容\n * 3. 分块并行翻译所有目标语言\n * 4. 合并翻译结果并生成最终配置文件\n *\n * 异常处理：\n * - 翻译结果不完整时中断流程\n * - 文件读写失败时明确报错\n */\nexport async function autoTranslate() {\n    // 初始化现有翻译文件缓存\n    const originLangObjMap: Record<string, any> = {}\n\n    // 加载所有语言的现有翻译内容\n    option.langKey.forEach(lang => {\n        originLangObjMap[lang] = fileUtils.getLangObjByJSONFileWithLangKey(lang)\n    })\n\n    // 获取当前待翻译内容（深拷贝避免污染原始数据）\n    const currentLangObj = JSON.parse(JSON.stringify(getLangObj()))\n\n    // 筛选需要翻译的新增内容\n    const transLangObj: Record<string, string> = {}\n    Object.keys(currentLangObj).forEach(key => {\n        if (!originLangObjMap[option.originLang][key]) {\n            transLangObj[key] = currentLangObj[key]\n        }\n    })\n\n    // 无新内容提前退出\n    if (Object.keys(transLangObj).length === 0) {\n        console.info('✅ 当前没有需要翻译的新内容')\n        return\n    }\n\n    // 初始化翻译结果存储结构\n    const newLangObjMap: Record<string, (string | number)[]> = {}\n\n    // 遍历所有目标语言进行处理\n    for (let langIndex = 0; langIndex < option.langKey.length; langIndex++) {\n        const currentLang = option.langKey[langIndex]\n\n        // 原始语言直接存储原文，读取扫出来的元素翻译内容\n        if (langIndex === 0) {\n            newLangObjMap[option.originLang] = Object.values(transLangObj)\n            continue\n        }\n\n        console.info('开始自动翻译...')\n\n        // ─── 分块翻译流程开始 ───\n        const translatedValues = await translateChunks(transLangObj, option.langKey[langIndex])\n        // ─── 分块翻译流程结束 ───=\n\n        // ─── 翻译结果校验 ───\n        if (translatedValues.length !== Object.keys(transLangObj).length) {\n            console.error(\n                '❌ 使用付费翻译时，请检查翻译API额度是否充足，或是否已申请对应翻译API使用权限（如使用有道翻译）'\n            )\n            console.error(`❌ 翻译结果不完整\n                预期数量: ${Object.keys(transLangObj).length}\n                实际数量: ${translatedValues.length}\n                样例数据: ${JSON.stringify(translatedValues.slice(0, 3))}`)\n            return\n        }\n\n        // 存储当前语言翻译结果\n        newLangObjMap[currentLang] = translatedValues\n        console.info(`✅ ${currentLang} 翻译完成`)\n    }\n\n    // ─── 合并翻译结果到配置 ───\n    Object.keys(transLangObj).forEach((key: any, index) => {\n        option.langKey.forEach(item => {\n            originLangObjMap[item][key] = newLangObjMap[item][index]\n        })\n    })\n\n    // ─── 生成最终配置文件结构 ───\n    console.log('📄 构建配置文件数据结构...')\n    const configLangObj: Record<string, Record<string, string>> = {}\n    Object.keys(originLangObjMap[option.originLang]).forEach(key => {\n        configLangObj[key] = {}\n        option.langKey.forEach(lang => {\n            configLangObj[key][lang] = originLangObjMap[lang][key]\n        })\n    })\n\n    // ─── 写入文件系统 ───\n    try {\n        fileUtils.setLangTranslateJSONFile(configLangObj)\n        console.info('🎉 多语言配置文件已成功更新')\n    } catch (error) {\n        console.error('❌ 配置文件写入失败，原因:', error)\n        // todo 可添加重试逻辑或回滚机制\n    }\n}\n\n/**\n * @description: 新增语言类型配置补全\n * @param {any} obj\n * @return {*}\n */\nexport function languageConfigCompletion(obj: any) {\n    if (!Object.keys(obj)) return\n    let needCompletionList: any[] = []\n    const JSONobj = JSON.parse(fileUtils.getLangTranslateJSONFile())\n    option.targetLangList.forEach(item => {\n        let langObj = fileUtils.getLangObjByJSONFileWithLangKey(item, JSONobj)\n        needCompletionList.push({\n            key: item,\n            curLangObj: langObj\n        })\n    })\n    needCompletionList.forEach(async item => {\n        await completionTranslateAndWriteConfigFile(obj, item.curLangObj, item.key)\n    })\n}\n\n/**\n * @description: 补全新增语言翻译写入函数\n * @param {any} langObj\n * @param {any} curLangObj\n * @param {string} translateKey\n * @return {*}\n */\nexport async function completionTranslateAndWriteConfigFile(\n    langObj: any,\n    curLangObj: any,\n    translateKey: string\n) {\n    // 生产需要更新的语言对象\n    let transLangObj: any = {}\n    Object.keys(langObj).forEach(key => {\n        if (!curLangObj[key]) {\n            transLangObj[key] = langObj[key]\n        }\n    })\n\n    if (!Object.values(transLangObj).length) return\n\n    // ─── 分块翻译流程开始 ───\n\n    console.info('进入新增语言补全翻译...')\n\n    // 调用抽离的函数\n    const resultValues = await translateChunks(transLangObj, translateKey)\n    // ─── 分块翻译流程结束 ───\n\n    if (resultValues.length !== Object.values(langObj).length) {\n        console.error('翻译异常，翻译结果缺失❌')\n        return\n    }\n    let newLangObjMap = resultValues\n    console.info('翻译成功⭐️⭐️⭐️')\n\n    Object.keys(transLangObj).forEach((key, index) => {\n        curLangObj[key] = newLangObjMap[index]\n    })\n\n    console.log('开始写入JSON配置文件...')\n    const configLangObj: any = JSON.parse(fileUtils.getLangTranslateJSONFile())\n\n    Object.keys(transLangObj).forEach(key => {\n        configLangObj[key][translateKey] = curLangObj[key]\n    })\n    try {\n        fileUtils.setLangTranslateJSONFile(configLangObj)\n        console.info('JSON配置文件写入成功⭐️⭐️⭐️')\n    } catch (error) {\n        console.error('❌JSON配置文件写入失败' + error)\n    }\n    console.info('新增语言翻译补全成功⭐️⭐️⭐️')\n}\n\n// 分块翻译流程函数\nasync function translateChunks(transLangObj: any, translateKey: string) {\n    // 获取分块后的文本列表\n    const translationChunks = chunkUtils.createTextSplitter(Object.values(transLangObj))\n    // 并行执行分块翻译\n    const translatePromises = []\n    for (let i = 0; i < translationChunks.length; i++) {\n        translatePromises.push(\n            option.translator.translate(translationChunks[i], option.originLang, translateKey)\n        )\n    }\n\n    // 等待所有分块完成并合并结果\n    const chunkResults = await Promise.all(translatePromises)\n    return chunkResults\n        .map(item => {\n            // 提取分割逻辑到单独的函数中，提高代码复用性\n            const splitTranslation = (text: string, separatorRegex: RegExp) => {\n                return text.split(separatorRegex).map(v => v.trim())\n            }\n\n            // 分割符可能会被翻译，所以这里做了兼容处理\n            if (SPLIT_SEPARATOR_REGEX.test(item)) {\n                return splitTranslation(item, SPLIT_SEPARATOR_REGEX)\n            } else {\n                const lines = item.split('\\n')\n                const separator = lines.find(line => line.length === 3)\n                let value: string[] = []\n                if (separator) {\n                    value = splitTranslation(item, new RegExp(`\\\\n${separator}\\\\n`))\n                }\n                const realList = value.filter(Boolean)\n                if (realList.length > 1) {\n                    return realList\n                }\n                return splitTranslation(item, SPLIT_SEPARATOR_REGEX)\n            }\n        })\n        .flat()\n}\n","/*\n * @Date: 2025-02-17 17:11:26\n * @LastEditors: xiaoshan\n * @LastEditTime: 2025-02-17 18:00:37\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/utils/chunk.ts\n */\nimport { SEPARATOR } from './translate'\n\n/**\n * 智能文本分块处理器\n * @param values 待分块的原始文本数组\n * @param maxChunkSize 最大分块长度（默认4500字符）\n * @returns 包含分块文本和重组方法的对象\n *\n * 功能特性：\n * 1. 自动合并小文本为最大可能块\n * 2. 处理超长文本并给出警告\n * 3. 保证块长度不超过限制\n * 4. 保留原始顺序和分隔符语义\n */\nexport function createTextSplitter(values: string[], maxChunkSize = 4500) {\n    // 分隔符定义（用于合并/拆分时保持语义）\n    const SEP_LENGTH = SEPARATOR.length\n\n    // 结果存储和缓冲区\n    const result: string[] = [] // 最终分块结果\n    let buffer: string[] = [] // 当前累积块缓冲区\n    let currentSize = 0 // 当前缓冲区字符数（含分隔符）\n\n    /**\n     * 提交缓冲区内容到结果集\n     * - 将缓冲区内容用分隔符连接\n     * - 重置缓冲区和计数器\n     */\n    const commitBuffer = () => {\n        if (buffer.length > 0) {\n            // 计算实际连接长度用于验证\n            const actualLength = buffer.join(SEPARATOR).length\n            if (actualLength > maxChunkSize) {\n                console.warn(`缓冲区提交异常：生成块长度 ${actualLength} 超过限制`)\n            }\n\n            result.push(buffer.join(SEPARATOR))\n            buffer = []\n            currentSize = 0\n        }\n    }\n\n    // 主处理循环：遍历所有原始文本项\n    for (const value of values) {\n        // 计算需要新增的空间：文本长度 + 分隔符（非首项）\n        const neededSpace = value.length + (buffer.length > 0 ? SEP_LENGTH : 0)\n\n        // ─── 超长文本处理策略 ───\n        if (value.length > maxChunkSize) {\n            // 优先提交现有缓冲区内容\n            if (buffer.length > 0) commitBuffer()\n\n            /**\n             * 超长文本处理逻辑：\n             * - 长度超过1.5倍限制时发出强警告\n             * - 强制单独成块（即使超过限制）\n             * - 后续需要特殊处理这些异常块\n             */\n            if (value.length > maxChunkSize * 1.5) {\n                console.warn(\n                    `超长文本告警：检测到长度 ${value.length} 字符的文本项，可能影响翻译质量`\n                )\n            }\n            // 结果直接新增一个超长文本\n            result.push(value)\n            continue\n        }\n\n        // ─── 正常分块逻辑 ───\n        // 空间不足时提交当前缓冲区\n        if (currentSize + neededSpace > maxChunkSize) {\n            commitBuffer()\n        }\n\n        // 更新缓冲区状态（累加长度需包含分隔符）\n        currentSize += neededSpace\n        buffer.push(value)\n    }\n\n    // 提交最终未完成的缓冲区内容\n    commitBuffer()\n\n    // 返回分块结果\n    return result\n}\n","/*\n * @Date: 2025-03-16 23:39:13\n * @LastEditors: xiaoshan\n * @LastEditTime: 2025-03-17 01:11:37\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/translator/baidu.ts\n */\nimport axios, { AxiosProxyConfig } from 'axios'\nimport { Translator } from './translator'\nimport CryptoJS from 'crypto-js'\nimport { SEPARATOR } from 'src/utils/translate'\n\nexport interface BaiduTranslatorOption {\n    appId: string\n    appKey: string\n    proxy?: AxiosProxyConfig\n    /** 翻译api执行间隔，默认为1000 */\n    interval?: number\n}\n\nexport class BaiduTranslator extends Translator {\n    /** 百度的语言类型映射不标准，需要手动控制 */\n    private readonly Baidu_TRANSLATE_KEY_CONVERT_MAP: Record<string, string> = {\n        'zh-cn': 'zh',\n        ja: 'jp',\n        ko: 'kor'\n    }\n\n    private getTranslateKey(key: string) {\n        return this.Baidu_TRANSLATE_KEY_CONVERT_MAP[key] || key\n    }\n\n    constructor(option: BaiduTranslatorOption) {\n        super({\n            name: '百度翻译',\n            fetchMethod: async (text, fromKey, toKey) => {\n                let salt = new Date().getTime()\n\n                const data = {\n                    q: text,\n                    appid: option.appId,\n                    from: this.getTranslateKey(fromKey),\n                    to: this.getTranslateKey(toKey),\n                    salt,\n                    sign: CryptoJS.MD5(option.appId + text + salt + option.appKey).toString()\n                }\n                const response = await axios.post(\n                    'https://fanyi-api.baidu.com/api/trans/vip/translate',\n                    data,\n                    {\n                        headers: {\n                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n                        },\n                        proxy: option.proxy\n                    }\n                )\n\n                const translatedTexts = response.data?.trans_result\n                    .map((item: any) => item.dst)\n                    .filter((_item: string, index: number) => index % 2 === 0)\n                    .join(SEPARATOR)\n\n                // 请求成功，返回响应数据\n                return translatedTexts || ''\n            },\n            interval: option.interval ?? 1000\n        })\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-26 17:34:47\n * @LastEditTime: 2025-03-17 18:36:25\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/option.ts\n */\n\nimport { OriginLangKeyEnum, TranslateTypeEnum } from './enums'\nimport {\n    YoudaoTranslator,\n    GoogleTranslator,\n    BaiduTranslator,\n    Translator,\n    TranslatorOption\n} from './translator'\nimport { cloneDeep } from './utils/base'\nexport { YoudaoTranslator, GoogleTranslator, BaiduTranslator, Translator, TranslateTypeEnum }\nexport type { TranslatorOption }\n\nconst EXCLUDED_CALL = ['$i8n', 'console.log', '$t', 'require', '$$i8n', '$$t', '_createCommentVNode']\n/**\n * 默认插件配置选项\n */\nconst DEFAULT_OPTION = {\n    /** 翻译调用函数，默认为 $t */\n    translateKey: '$t',\n\n    /** 标记不翻译调用函数列表，避免某些调用被错误翻译 */\n    excludedCall: [] as string[],\n\n    /** 标记不用翻译的字符串模式数组，默认是匹配文件扩展名 */\n    excludedPattern: [/\\.\\w+$/],\n\n    /** 排查不需要翻译的目录下的文件路径（黑名单）, 默认不处理node_modules */\n    excludedPath: ['node_modules'] as string[],\n\n    /** 指定需要翻译文件的目录路径正则（白名单） */\n    includePath: [/src\\//, /src\\\\/],\n\n    /** 配置文件生成位置，默认为 './lang' */\n    globalPath: './lang',\n\n    /** 打包后生成文件的位置，例如 './dist/assets' */\n    distPath: '',\n\n    /** 打包后生成文件的主文件名称，默认是 'index' */\n    distKey: 'index',\n\n    /** 来源语言，默认是中文 */\n    originLang: OriginLangKeyEnum.ZH as OriginLangKeyEnum | string,\n\n    /** 翻译目标语言列表，默认包含英文 */\n    targetLangList: ['en'],\n\n    /** 语言key，用于请求谷歌api和生成配置文件下对应语言的内容文件 */\n    langKey: [] as string[],\n\n    /** 命名空间，防止全局命名冲突 */\n    namespace: 'lang',\n\n    /** 是否在构建结束之后将最新的翻译重新打包到主包中，默认不打包 */\n    buildToDist: false,\n\n    /** 默认使用 Google 翻译器 */\n    translator: new GoogleTranslator({\n        proxyOption: {\n            port: 7890,\n            host: '127.0.0.1',\n            headers: {\n                'User-Agent': 'Node'\n            }\n        }\n    }) as Translator,\n\n    /** 翻译器配置选项，优先级低于translator */\n    translatorOption: undefined as TranslatorOption | undefined,\n\n    /**\n     * 翻译类型，支持全自动和半自动两种模式\n     * 全自动：所有翻译任务自动完成\n     * 半自动：需要人工标识\n     */\n    translateType: TranslateTypeEnum.FULL_AUTO as TranslateTypeEnum | string\n}\n\n/**\n * 类型定义：插件配置选项类型\n */\ntype OptionType = typeof DEFAULT_OPTION\n\n/**\n * 全局插件配置实例，复制自默认配置\n */\nexport let option: OptionType = { ...DEFAULT_OPTION }\n\n/**\n * 类型定义：用户传入的配置选项\n */\nexport interface OptionInfo extends Partial<OptionType> {}\n\n/**\n * 通过深度克隆提供的选项信息生成一个用户选项对象，\n * 确保原始配置不被修改。它还根据用户的配置初始化翻译器。\n * @param optionInfo - 包含用户选项和翻译器细节的选项信息。\n * @returns 一个新的、可能已初始化翻译器的用户选项对象。\n */\nfunction generateUserOption(optionInfo: OptionInfo) {\n    // 深拷贝用户传入的配置，防止修改原配置对象\n    const userOption = cloneDeep(optionInfo)\n    userOption.translator = optionInfo?.translator\n\n    // 如果用户配置了translatorOption则初始化translator，如果都没有则不设置translator\n    userOption.translator ||= userOption.translatorOption\n        ? new Translator(userOption.translatorOption)\n        : undefined\n    if (!userOption.translator) delete userOption.translator\n    return userOption\n}\n\n/**\n * 初始化插件配置选项\n * @param optionInfo 用户提供的配置选项\n */\nexport function initOption(optionInfo: OptionInfo) {\n    // 合并默认配置和用户配置\n    option = { ...DEFAULT_OPTION, ...generateUserOption(optionInfo) }\n\n    // 初始化语言key数组，包含来源语言和目标语言\n    option.langKey = [option.originLang, ...option.targetLangList]\n    // 初始化排除调用函数列表，包含默认排除和调用函数主动排除\n    option.excludedCall = [\n        ...option.excludedCall,\n        ...EXCLUDED_CALL,\n        ...[option.translateKey, '$' + option.translateKey]\n    ]\n}\n\n/**\n * 校验插件配置选项是否完整有效\n * @returns {boolean} 校验结果，完整返回 true，否则返回 false\n */\nexport function checkOption() {\n    // 校验翻译调用函数是否配置\n    if (!option.translateKey) {\n        console.error('❌请配置翻译调用函数')\n        return false\n    }\n\n    // 校验命名空间是否配置\n    if (!option.namespace) {\n        console.error('❌请配置命名空间')\n        return false\n    }\n\n    // 校验是否配置了打包后生成文件的主文件名称（如果需要打包到主包中）\n    if (option.buildToDist && !option.distKey) {\n        console.log('❌请配置打包后生成文件的主文件名称')\n        return false\n    }\n\n    // 校验是否配置了打包后生成文件的位置（如果需要打包到主包中）\n    if (option.buildToDist && !option.distPath) {\n        console.log('❌请配置打包后生成文件的位置')\n        return false\n    }\n\n    // 校验来源语言是否配置\n    if (!option.originLang) {\n        console.error('❌请配置来源语言')\n        return false\n    }\n\n    // 校验目标翻译语言数组是否配置\n    if (!option.targetLangList || !option.targetLangList.length) {\n        console.error('❌请配置目标翻译语言数组')\n        return false\n    }\n\n    // 如果所有校验通过，返回 true\n    return true\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-12 18:18:51\n * @LastEditTime: 2025-03-16 18:24:37\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/filter/visitor/StringLiteral.ts\n */\nimport * as types from '@babel/types'\nimport { baseUtils } from '../../utils/index'\nimport { option, TranslateTypeEnum } from '../../option'\n\nexport default function (path: any) {\n    if (option.translateType === TranslateTypeEnum.SEMI_AUTO) {\n        return\n    }\n    let { node, parent } = path\n    let value = node.value\n\n    // 定义一个包含亚洲语言代码的数组\n    const asianLangs = ['zh-cn', 'ja', 'ko']\n    if (asianLangs.some(lang => option.originLang.includes(lang) || option.originLang === lang)) {\n        try {\n            value = baseUtils.unicodeToString(value)\n        } catch (error) {\n            console.log('转换异常')\n        }\n    }\n    if (\n        baseUtils.hasOriginSymbols(value) &&\n        option.excludedPattern.length &&\n        !baseUtils.checkAgainstRegexArray(value, [...option.excludedPattern])\n    ) {\n        // 获取真实调用函数\n        const extractFnName = baseUtils.extractFunctionName(parent)\n        // 防止导入语句，只处理那些当前节点不是键值对的键的字符串字面量，调用语句判断当前调用语句是否包含需要过滤的调用语句\n        if (\n            types.isImportDeclaration(parent) ||\n            parent.key === node ||\n            (types.isCallExpression(parent) &&\n                extractFnName &&\n                option.excludedCall.includes(extractFnName))\n        )\n            return\n        let replaceNode\n        if (types.isJSXAttribute(parent)) {\n            let expression = baseUtils.createI18nTranslator(value, true)\n            replaceNode = types.jSXExpressionContainer(expression)\n        } else {\n            replaceNode = baseUtils.createI18nTranslator(value, true)\n        }\n        path.replaceWith(replaceNode)\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-12 18:18:51\n * @LastEditTime: 2025-03-16 15:17:30\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/filter/visitor/CallExpression.ts\n */\nimport * as types from '@babel/types'\nimport { baseUtils, translateUtils } from '../../utils'\nimport { option, TranslateTypeEnum } from '../../option'\n\n// 收集翻译对象\nexport default function (path: any) {\n    let { node } = path\n    if (node.callee.name === option.translateKey) {\n        if (option.translateType === TranslateTypeEnum.SEMI_AUTO) {\n            // 获取当前翻译函数的参数\n            let arg = node.arguments || []\n            // 如果参数数量不为 1，则直接返回\n            if (arg.length === 1) {\n                const value = arg[0]?.value || ''\n                // 生成真实调用函数\n                const replaceNode = baseUtils.createI18nTranslator(value, true)\n                path.replaceWith(replaceNode)\n                translateSetLang(replaceNode)\n            }\n        } else if (option.translateType === TranslateTypeEnum.FULL_AUTO) {\n            translateSetLang(node)\n        }\n    }\n}\n\n/**\n * @description: 处理翻译并设置语言对象属性\n * @param {types.CallExpression} node - 调用表达式节点\n * @return {void}\n */\nfunction translateSetLang(node: types.CallExpression) {\n    // 获取调用表达式的参数\n    let arg = node.arguments || []\n    // 提取参数作为值\n    // 检查参数是否为字符串字面量\n    const id = types.isStringLiteral(arg[0]) ? arg[0].value : ''\n    const value = types.isStringLiteral(arg[1]) ? arg[1].value : ''\n    // 检查 ID 和值是否存在，并且第二个参数是字符串字面量\n    if (id && value && types.isStringLiteral(arg[1])) {\n        // 调用翻译工具的 setLangObj 方法设置语言对象属性\n        translateUtils.setLangObj(id, value)\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-11-01 16:35:38\n * @LastEditTime: 2025-03-16 18:23:23\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/filter/visitor/TemplateElement.ts\n */\nimport types from '@babel/types'\nimport { option, TranslateTypeEnum } from '../../option'\nimport { baseUtils, translateUtils } from '../../utils'\n\nexport default function (path: any) {\n    if (option.translateType === TranslateTypeEnum.SEMI_AUTO) {\n        return\n    }\n    let { node, parent } = path\n    if (!node.value) return\n\n    let value = node.value.raw || node.value.cooked // 获取模板字符串的值\n    // 定义一个包含亚洲语言代码的数组\n    const asianLangs = ['zh-cn', 'ja', 'ko']\n    if (asianLangs.some(lang => option.originLang.includes(lang) || option.originLang === lang)) {\n        try {\n            value = baseUtils.unicodeToString(value)\n        } catch (error) {\n            console.log('转换异常')\n        }\n    }\n    // 是否存在来源语言字符，是否在默认字符串中，是否包含过滤字段\n    if (\n        value &&\n        baseUtils.hasOriginSymbols(value) &&\n        option.excludedPattern.length &&\n        !baseUtils.checkAgainstRegexArray(value, [...option.excludedPattern])\n    ) {\n        // 获取真实调用函数\n        const extractFnName = baseUtils.extractFunctionName(parent)\n        // 调用语句判断当前调用语句是否包含需要过滤的调用语句\n        if (\n            types.isCallExpression(parent) &&\n            extractFnName &&\n            option.excludedCall.includes(extractFnName)\n        )\n            return\n\n        // 生成字符类型翻译节点\n        let newNode = baseUtils.createI18nTranslator(value)\n\n        // 替换为字符类型翻译节点\n        node.value.raw = node.value.cooked = `\\${${newNode}}`\n\n        let id = baseUtils.generateId(value)\n\n        if (id && value) {\n            translateUtils.setLangObj(id, value)\n        }\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-11-01 16:35:38\n * @LastEditTime: 2025-03-16 18:24:44\n * @FilePath: /i18n_translation_vite/packages/autoI18nPluginCore/src/filter/visitor/JSXText.ts\n */\nimport * as types from '@babel/types'\nimport { baseUtils } from '../../utils'\nimport { option, TranslateTypeEnum } from '../../option'\n\nexport default function (path: any) {\n    console.log('jsx text')\n\n    if (option.translateType === TranslateTypeEnum.SEMI_AUTO) {\n        return\n    }\n\n    let { node } = path\n    let value = node.value\n    // 定义一个包含亚洲语言代码的数组\n    const asianLangs = ['zh-cn', 'ja', 'ko']\n    if (asianLangs.some(lang => option.originLang.includes(lang) || option.originLang === lang)) {\n        try {\n            value = baseUtils.unicodeToString(value)\n        } catch (error) {\n            console.log('转换异常')\n        }\n    }\n    if (\n        baseUtils.hasOriginSymbols(value) &&\n        option.excludedPattern.length &&\n        !baseUtils.checkAgainstRegexArray(value, [...option.excludedPattern])\n    ) {\n        // 生成翻译节点\n        let expression = baseUtils.createI18nTranslator(value, true)\n        // 生成的翻译节点包装在  types.JSXExpressionContainer  中\n        let newNode = types.jSXExpressionContainer(expression)\n        // 使用  path.replaceWith  方法将原来的节点替换为新的翻译节点\n        path.replaceWith(newNode)\n    }\n}\n","/*\n * @Author: xiaoshanwen\n * @Date: 2023-10-12 18:00:37\n * @LastEditTime: 2023-11-02 10:36:02\n * @FilePath: /i18n_translation_vite/src/plugins/filter/index.ts\n */\n\nimport StringLiteral from './visitor/StringLiteral'\nimport CallExpression from './visitor/CallExpression'\nimport TemplateElement from './visitor/TemplateElement'\nimport JSXText from './visitor/JSXText'\n\nexport default function () {\n    return {\n        visitor: {\n            StringLiteral,\n            JSXText,\n            TemplateElement,\n            CallExpression\n        }\n    }\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","OriginLangKeyEnum","TranslateApiEnum","TranslateTypeEnum","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","pop","push","__spreadArray","to","from","pack","ar","l","slice","concat","SuppressedError","translationTypeMap","Map","IntervalQueue","fn","delay","timeout","queue","isRunning","execute","_this","args","_i","run","setTimeout","Error","wait","_a","item","shift","_b","e_1","Translator","option","interval","fetchMethod","bind","getErrorMessage","error","message","translate","text","fromKey","toKey","name","console","error_1","has","get","GoogleTranslator","_super","proxyOption","fetchOptions","agent","tunnel","httpsOverHttp","proxy","YoudaoTranslator","salt","Date","getTime","curTime","Math","round","str","appId","truncate","appKey","sign","CryptoJS","SHA256","toString","enc","Hex","data","q","getTranslateKey","signType","curtime","axios","post","headers","response","translation","YOUDAO_TRANSLATE_KEY_CONVERT_MAP","len","substring","key","FunctionFactoryOption","originLang","REGEX_MAP","ZH","EN","JA","KO","RU","hasOriginSymbols","code","test","checkAgainstRegexArray","regexArray","RegExp","extractFunctionName","node","callName","types","isCallExpression","isMemberExpression","callee","callObjName","callObj","property","object","extractStrings","fileContent","regex","matches","match","filter","index","indexOf","createI18nTranslator","isExpression","nameSpace","namespace","trimmedValue","trim","valStr","replace","generatedKey","generateId","valueExp","stringLiteral","extra","raw","rawValue","callExpression","identifier","translateKey","hash","charCodeAt","abs","unicodeToString","fromCharCode","parseInt","cloneDeep","cache","WeakMap","source","flags","clone","isArray","set","keys_1","keys","getOwnPropertySymbols","sym","propertyIsEnumerable","indentConfig","tab","char","size","space","configDefault","type","placeholderStorage","pushPlaceholder","popPlaceholder","_match","generateIndentation","count","indentType","join","jsonFormatter","json","config","jsonString","JSON","stringify","indent","output","indentLevel","charAt","formatJSON","initTranslateBasicFnFile","langMapList","map","translateBasicFnText","indexPath","path","globalPath","needUpdate","fs","existsSync","readFileSync","writeFileSync","initLangTranslateJSONFile","getLangTranslateJSONFile","filePath","log","getLangObjByJSONFileWithLangKey","insertJSONObj","undefined","JSONObj","parse","langObj","forEach","setLangTranslateJSONFile","obj","jsonObj","buildToDist","langObjMap","langKey","distPath","readdir","err","files","file","startsWith","distKey","endsWith","filePath_1","readFile","buildLangConfigString","info","mkdirSync","SEPARATOR","SPLIT_SEPARATOR_REGEX","setLangObj","getLangObj","completionTranslateAndWriteConfigFile","curLangObj","transLangObj","values","translateChunks","resultValues","newLangObjMap","configLangObj","fileUtils","translationChunks","maxChunkSize","SEP_LENGTH","buffer","currentSize","commitBuffer","actualLength","warn","values_1","neededSpace","chunkUtils","translatePromises","translator","all","splitTranslation","separatorRegex","split","separator","find","line","realList","Boolean","flat","originLangObjMap","lang","currentLangObj","langIndex","currentLang","translatedValues","needCompletionList","JSONobj","targetLangList","BaiduTranslator","appid","MD5","translatedTexts","trans_result","dst","_item","Baidu_TRANSLATE_KEY_CONVERT_MAP","ja","ko","EXCLUDED_CALL","DEFAULT_OPTION","excludedCall","excludedPattern","excludedPath","includePath","port","host","translatorOption","translateType","FULL_AUTO","initOption","optionInfo","userOption","generateUserOption","checkOption","StringLiteral","SEMI_AUTO","parent","some","includes","baseUtils","extractFnName","isImportDeclaration","replaceNode","isJSXAttribute","expression","jSXExpressionContainer","replaceWith","CallExpression","arg","translateSetLang","id","isStringLiteral","translateUtils","TemplateElement","cooked","newNode","JSXText","visitor"],"mappings":"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","x_google_ignoreList":[0]}